{"/Users/janton/Code/Code for Baltimore/lambda-restful-util/src/index.ts":{"path":"/Users/janton/Code/Code for Baltimore/lambda-restful-util/src/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":23},"end":{"line":6,"column":67}},"4":{"start":{"line":7,"column":21},"end":{"line":25,"column":1}},"5":{"start":{"line":8,"column":4},"end":{"line":10,"column":5}},"6":{"start":{"line":9,"column":8},"end":{"line":9,"column":52}},"7":{"start":{"line":11,"column":4},"end":{"line":24,"column":6}},"8":{"start":{"line":12,"column":23},"end":{"line":19,"column":9}},"9":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"10":{"start":{"line":21,"column":12},"end":{"line":21,"column":81}},"11":{"start":{"line":23,"column":8},"end":{"line":23,"column":24}},"12":{"start":{"line":26,"column":37},"end":{"line":32,"column":1}},"13":{"start":{"line":27,"column":4},"end":{"line":30,"column":5}},"14":{"start":{"line":28,"column":29},"end":{"line":28,"column":57}},"15":{"start":{"line":29,"column":8},"end":{"line":29,"column":30}},"16":{"start":{"line":31,"column":4},"end":{"line":31,"column":16}},"17":{"start":{"line":33,"column":34},"end":{"line":39,"column":1}},"18":{"start":{"line":34,"column":4},"end":{"line":37,"column":5}},"19":{"start":{"line":35,"column":26},"end":{"line":35,"column":63}},"20":{"start":{"line":36,"column":8},"end":{"line":36,"column":27}},"21":{"start":{"line":38,"column":4},"end":{"line":38,"column":16}},"22":{"start":{"line":40,"column":0},"end":{"line":45,"column":2}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":21},"end":{"line":7,"column":22}},"loc":{"start":{"line":7,"column":59},"end":{"line":25,"column":1}},"line":7},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":11},"end":{"line":11,"column":12}},"loc":{"start":{"line":11,"column":27},"end":{"line":24,"column":5}},"line":11},"3":{"name":"(anonymous_3)","decl":{"start":{"line":26,"column":37},"end":{"line":26,"column":38}},"loc":{"start":{"line":26,"column":69},"end":{"line":32,"column":1}},"line":26},"4":{"name":"(anonymous_4)","decl":{"start":{"line":33,"column":34},"end":{"line":33,"column":35}},"loc":{"start":{"line":33,"column":66},"end":{"line":39,"column":1}},"line":33}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":8,"column":4},"end":{"line":10,"column":5}},"type":"if","locations":[{"start":{"line":8,"column":4},"end":{"line":10,"column":5}},{"start":{"line":8,"column":4},"end":{"line":10,"column":5}}],"line":8},"4":{"loc":{"start":{"line":8,"column":8},"end":{"line":8,"column":44}},"type":"binary-expr","locations":[{"start":{"line":8,"column":8},"end":{"line":8,"column":24}},{"start":{"line":8,"column":28},"end":{"line":8,"column":44}}],"line":8},"5":{"loc":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},{"start":{"line":20,"column":8},"end":{"line":22,"column":9}}],"line":20},"6":{"loc":{"start":{"line":21,"column":28},"end":{"line":21,"column":80}},"type":"cond-expr","locations":[{"start":{"line":21,"column":61},"end":{"line":21,"column":73}},{"start":{"line":21,"column":76},"end":{"line":21,"column":80}}],"line":21},"7":{"loc":{"start":{"line":27,"column":4},"end":{"line":30,"column":5}},"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":30,"column":5}},{"start":{"line":27,"column":4},"end":{"line":30,"column":5}}],"line":27},"8":{"loc":{"start":{"line":27,"column":8},"end":{"line":27,"column":124}},"type":"binary-expr","locations":[{"start":{"line":27,"column":8},"end":{"line":27,"column":37}},{"start":{"line":27,"column":41},"end":{"line":27,"column":78}},{"start":{"line":27,"column":82},"end":{"line":27,"column":124}}],"line":27},"9":{"loc":{"start":{"line":34,"column":4},"end":{"line":37,"column":5}},"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":37,"column":5}},{"start":{"line":34,"column":4},"end":{"line":37,"column":5}}],"line":34},"10":{"loc":{"start":{"line":34,"column":8},"end":{"line":34,"column":118}},"type":"binary-expr","locations":[{"start":{"line":34,"column":8},"end":{"line":34,"column":37}},{"start":{"line":34,"column":41},"end":{"line":34,"column":75}},{"start":{"line":34,"column":79},"end":{"line":34,"column":118}}],"line":34}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":2,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":1},"f":{"0":1,"1":2,"2":1,"3":0,"4":0},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[1,1],"4":[2,1],"5":[1,0],"6":[1,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0,0]},"inputSourceMap":{"version":3,"file":"/Users/janton/Code/Code for Baltimore/lambda-restful-util/src/index.ts","sources":["/Users/janton/Code/Code for Baltimore/lambda-restful-util/src/index.ts"],"names":[],"mappings":";;;;;AAAA,oEAA6C;AAoB7C,IAAM,cAAc,GAAG,UAAC,UAAkB,EAAE,MAAc,EAAE,MAAiB;IAC3E,IAAI,GAAG,GAAG,UAAU,IAAI,UAAU,GAAG,GAAG,EAAE;QACxC,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAA;KAC5C;IAGD,OAAO,UAAC,IAA0D;QAChE,IAAM,QAAQ,GAAiB;YAC7B,UAAU,EAAE,UAAU;YACtB,OAAO,EAAE;gBACP,6BAA6B,EAAE,MAAM;gBACrC,kCAAkC,EAAE,IAAI;aACzC;YACD,IAAI,EAAE,EAAE;SACT,CAAA;QAGD,IAAI,IAAI,EAAE;YACR,QAAQ,CAAC,IAAI,GAAG,CAAC,OAAO,MAAM,KAAK,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAA;SACrE;QAED,OAAO,QAAQ,CAAA;IACjB,CAAC,CAAA;AACH,CAAC,CAAA;AAMD,IAAM,8BAA8B,GAAG,UAAC,oBAA0C;IAChF,IAAI,oBAAoB,KAAK,IAAI,IAAI,oBAAoB,CAAC,OAAO,KAAK,IAAI,IAAI,oBAAoB,CAAC,OAAO,KAAK,SAAS,EAAE;QACxH,IAAM,cAAc,GAA4B,oBAAoB,CAAC,OAAO,CAAA;QAE5E,OAAO,cAAc,CAAA;KACtB;IAED,OAAO,IAAI,CAAA;AACb,CAAC,CAAA;AAMD,IAAM,2BAA2B,GAAG,UAAC,oBAA0C;IAC7E,IAAI,oBAAoB,KAAK,IAAI,IAAI,oBAAoB,CAAC,IAAI,KAAK,IAAI,IAAI,oBAAoB,CAAC,IAAI,KAAK,SAAS,EAAE;QAClH,IAAM,WAAW,GAAW,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAA;QAEjE,OAAO,WAAW,CAAA;KACnB;IAED,OAAO,IAAI,CAAA;AACb,CAAC,CAAA;AAED,kBAAe;IACb,cAAc,gBAAA;IACd,8BAA8B,gCAAA;IAC9B,2BAA2B,6BAAA;IAC3B,cAAc,0BAAA;CACf,CAAA","sourcesContent":["import HttpStatusCode from './HttpStatusCode'\nimport { APIGatewayProxyEvent } from 'aws-lambda'\n\n/** Interfaces */\nexport interface HttpResponse {\n  statusCode: number,\n  headers: {\n    'Access-Control-Allow-Origin': string,\n    'Access-Control-Allow-Credentials': boolean\n  },\n  body: string | Record<string, unknown>\n}\n\n/**\n * Will return fully formatted and ready \n * HTTP response for Lambda delivery\n * @param statusCode \n * @param origin\n * @param format \n */\nconst withStatusCode = (statusCode: number, origin: string, format?: Function): Function => {\n  if (100 > statusCode || statusCode > 599) {\n    throw new Error('status code out of range')\n  }\n\n  // return a function that will take some data and formats a response with a status code\n  return (data: string | Record<string, unknown> | Array<any> | void): HttpResponse => {\n    const response: HttpResponse = {\n      statusCode: statusCode,\n      headers: {\n        'Access-Control-Allow-Origin': origin,\n        'Access-Control-Allow-Credentials': true,\n      },\n      body: ''\n    }\n\n    // only send a body if there is data\n    if (data) {\n      response.body = (typeof format === 'function') ? format(data) : data\n    }\n\n    return response\n  }\n}\n\n/**\n * \n * @param apiGatewayProxyEvent \n */\nconst validateAndParseRequestHeaders = (apiGatewayProxyEvent: APIGatewayProxyEvent): Record<string, unknown> | null => {\n  if (apiGatewayProxyEvent !== null && apiGatewayProxyEvent.headers !== null && apiGatewayProxyEvent.headers !== undefined) {\n    const requestHeaders: Record<string, unknown> = apiGatewayProxyEvent.headers\n\n    return requestHeaders\n  }\n\n  return null\n}\n\n/**\n * \n * @param apiGatewayProxyEvent \n */\nconst validateAndParseRequestBody = (apiGatewayProxyEvent: APIGatewayProxyEvent): string | null => {\n  if (apiGatewayProxyEvent !== null && apiGatewayProxyEvent.body !== null && apiGatewayProxyEvent.body !== undefined) {\n    const requestBody: string = JSON.parse(apiGatewayProxyEvent.body)\n\n    return requestBody\n  }\n\n  return null\n}\n\nexport default {\n  withStatusCode,\n  validateAndParseRequestHeaders,\n  validateAndParseRequestBody,\n  HttpStatusCode\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7ecbd4ba4c21ec4fba699a1d5bb12ef49d3ebeaf","contentHash":"15b614eee540a27b7aae3cce35f9bf4c3083240d7e3443eb8e4b91204e6f9d9a"},"/Users/janton/Code/Code for Baltimore/lambda-restful-util/src/HttpStatusCode.ts":{"path":"/Users/janton/Code/Code for Baltimore/lambda-restful-util/src/HttpStatusCode.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":4,"column":0},"end":{"line":66,"column":44}},"2":{"start":{"line":5,"column":4},"end":{"line":5,"column":66}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":88}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":70}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":54}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":64}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":66}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":108}},"9":{"start":{"line":12,"column":4},"end":{"line":12,"column":70}},"10":{"start":{"line":13,"column":4},"end":{"line":13,"column":76}},"11":{"start":{"line":14,"column":4},"end":{"line":14,"column":80}},"12":{"start":{"line":15,"column":4},"end":{"line":15,"column":74}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":82}},"14":{"start":{"line":17,"column":4},"end":{"line":17,"column":64}},"15":{"start":{"line":18,"column":4},"end":{"line":18,"column":82}},"16":{"start":{"line":19,"column":4},"end":{"line":19,"column":84}},"17":{"start":{"line":20,"column":4},"end":{"line":20,"column":60}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":68}},"19":{"start":{"line":22,"column":4},"end":{"line":22,"column":74}},"20":{"start":{"line":23,"column":4},"end":{"line":23,"column":68}},"21":{"start":{"line":24,"column":4},"end":{"line":24,"column":74}},"22":{"start":{"line":25,"column":4},"end":{"line":25,"column":86}},"23":{"start":{"line":26,"column":4},"end":{"line":26,"column":86}},"24":{"start":{"line":27,"column":4},"end":{"line":27,"column":72}},"25":{"start":{"line":28,"column":4},"end":{"line":28,"column":74}},"26":{"start":{"line":29,"column":4},"end":{"line":29,"column":82}},"27":{"start":{"line":30,"column":4},"end":{"line":30,"column":68}},"28":{"start":{"line":31,"column":4},"end":{"line":31,"column":68}},"29":{"start":{"line":32,"column":4},"end":{"line":32,"column":86}},"30":{"start":{"line":33,"column":4},"end":{"line":33,"column":78}},"31":{"start":{"line":34,"column":4},"end":{"line":34,"column":108}},"32":{"start":{"line":35,"column":4},"end":{"line":35,"column":80}},"33":{"start":{"line":36,"column":4},"end":{"line":36,"column":66}},"34":{"start":{"line":37,"column":4},"end":{"line":37,"column":58}},"35":{"start":{"line":38,"column":4},"end":{"line":38,"column":80}},"36":{"start":{"line":39,"column":4},"end":{"line":39,"column":88}},"37":{"start":{"line":40,"column":4},"end":{"line":40,"column":84}},"38":{"start":{"line":41,"column":4},"end":{"line":41,"column":74}},"39":{"start":{"line":42,"column":4},"end":{"line":42,"column":94}},"40":{"start":{"line":43,"column":4},"end":{"line":43,"column":92}},"41":{"start":{"line":44,"column":4},"end":{"line":44,"column":86}},"42":{"start":{"line":45,"column":4},"end":{"line":45,"column":76}},"43":{"start":{"line":46,"column":4},"end":{"line":46,"column":88}},"44":{"start":{"line":47,"column":4},"end":{"line":47,"column":90}},"45":{"start":{"line":48,"column":4},"end":{"line":48,"column":62}},"46":{"start":{"line":49,"column":4},"end":{"line":49,"column":84}},"47":{"start":{"line":50,"column":4},"end":{"line":50,"column":82}},"48":{"start":{"line":51,"column":4},"end":{"line":51,"column":92}},"49":{"start":{"line":52,"column":4},"end":{"line":52,"column":84}},"50":{"start":{"line":53,"column":4},"end":{"line":53,"column":112}},"51":{"start":{"line":54,"column":4},"end":{"line":54,"column":108}},"52":{"start":{"line":55,"column":4},"end":{"line":55,"column":92}},"53":{"start":{"line":56,"column":4},"end":{"line":56,"column":80}},"54":{"start":{"line":57,"column":4},"end":{"line":57,"column":72}},"55":{"start":{"line":58,"column":4},"end":{"line":58,"column":88}},"56":{"start":{"line":59,"column":4},"end":{"line":59,"column":80}},"57":{"start":{"line":60,"column":4},"end":{"line":60,"column":102}},"58":{"start":{"line":61,"column":4},"end":{"line":61,"column":96}},"59":{"start":{"line":62,"column":4},"end":{"line":62,"column":90}},"60":{"start":{"line":63,"column":4},"end":{"line":63,"column":76}},"61":{"start":{"line":64,"column":4},"end":{"line":64,"column":74}},"62":{"start":{"line":65,"column":4},"end":{"line":65,"column":112}},"63":{"start":{"line":67,"column":0},"end":{"line":67,"column":33}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":1},"end":{"line":4,"column":2}},"loc":{"start":{"line":4,"column":27},"end":{"line":66,"column":1}},"line":4}},"branchMap":{"0":{"loc":{"start":{"line":66,"column":3},"end":{"line":66,"column":42}},"type":"binary-expr","locations":[{"start":{"line":66,"column":3},"end":{"line":66,"column":17}},{"start":{"line":66,"column":22},"end":{"line":66,"column":41}}],"line":66}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1},"f":{"0":1},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/janton/Code/Code for Baltimore/lambda-restful-util/src/HttpStatusCode.ts","sources":["/Users/janton/Code/Code for Baltimore/lambda-restful-util/src/HttpStatusCode.ts"],"names":[],"mappings":";;AAIA,IAAK,cAsXJ;AAtXD,WAAK,cAAc;IASf,6DAAc,CAAA;IAKd,mFAAyB,CAAA;IAOzB,iEAAgB,CAAA;IAQhB,iDAAQ,CAAA;IAKR,2DAAa,CAAA;IAMb,6DAAc,CAAA;IAOd,uGAAmC,CAAA;IAKnC,iEAAgB,CAAA;IAMhB,uEAAmB,CAAA;IAOnB,2EAAqB,CAAA;IAMrB,qEAAkB,CAAA;IAMlB,6EAAsB,CAAA;IAMtB,2DAAa,CAAA;IAOb,6EAAsB,CAAA;IAKtB,+EAAuB,CAAA;IAUvB,uDAAW,CAAA;IAQX,+DAAe,CAAA;IAMf,qEAAkB,CAAA;IAOlB,+DAAe,CAAA;IAKf,qEAAkB,CAAA;IAQlB,iFAAwB,CAAA;IAOxB,iFAAwB,CAAA;IAMxB,mEAAiB,CAAA;IAQjB,qEAAkB,CAAA;IAOlB,6EAAsB,CAAA;IAMtB,+DAAe,CAAA;IAMf,+DAAe,CAAA;IAMf,iFAAwB,CAAA;IAKxB,yEAAoB,CAAA;IAKpB,uGAAmC,CAAA;IAOnC,2EAAqB,CAAA;IAMrB,6DAAc,CAAA;IASd,qDAAU,CAAA;IAKV,2EAAqB,CAAA;IAKrB,mFAAyB,CAAA;IAKzB,+EAAuB,CAAA;IAOvB,qEAAkB,CAAA;IAMlB,yFAA4B,CAAA;IAO5B,uFAA2B,CAAA;IAK3B,iFAAwB,CAAA;IAOxB,uEAAmB,CAAA;IAKnB,mFAAyB,CAAA;IAKzB,qFAA0B,CAAA;IAK1B,yDAAY,CAAA;IAKZ,+EAAuB,CAAA;IAKvB,6EAAsB,CAAA;IAQtB,uFAA2B,CAAA;IAK3B,+EAAuB,CAAA;IAMvB,2GAAqC,CAAA;IAMrC,uGAAmC,CAAA;IAKnC,uFAA2B,CAAA;IAM3B,2EAAqB,CAAA;IAKrB,mEAAiB,CAAA;IAMjB,mFAAyB,CAAA;IAKzB,2EAAqB,CAAA;IAKrB,iGAAgC,CAAA;IAKhC,2FAA6B,CAAA;IAK7B,qFAA0B,CAAA;IAK1B,uEAAmB,CAAA;IAKnB,qEAAkB,CAAA;IAOlB,2GAAqC,CAAA;AACzC,CAAC,EAtXI,cAAc,KAAd,cAAc,QAsXlB;AAED,kBAAe,cAAc,CAAA","sourcesContent":["/**\n * Hypertext Transfer Protocol (HTTP) response status codes.\n * @see {@link https://en.wikipedia.org/wiki/List_of_HTTP_status_codes}\n */\nenum HttpStatusCode {\n\n    /**\n     * The server has received the request headers and the client should proceed to send the request body\n     * (in the case of a request for which a body needs to be sent; for example, a POST request).\n     * Sending a large request body to a server after a request has been rejected for inappropriate headers would be inefficient.\n     * To have a server check the request's headers, a client must send Expect: 100-continue as a header in its initial request\n     * and receive a 100 Continue status code in response before sending the body. The response 417 Expectation Failed indicates the request should not be continued.\n     */\n    CONTINUE = 100,\n\n    /**\n     * The requester has asked the server to switch protocols and the server has agreed to do so.\n     */\n    SWITCHING_PROTOCOLS = 101,\n\n    /**\n     * A WebDAV request may contain many sub-requests involving file operations, requiring a long time to complete the request.\n     * This code indicates that the server has received and is processing the request, but no response is available yet.\n     * This prevents the client from timing out and assuming the request was lost.\n     */\n    PROCESSING = 102,\n\n    /**\n     * Standard response for successful HTTP requests.\n     * The actual response will depend on the request method used.\n     * In a GET request, the response will contain an entity corresponding to the requested resource.\n     * In a POST request, the response will contain an entity describing or containing the result of the action.\n     */\n    OK = 200,\n\n    /**\n     * The request has been fulfilled, resulting in the creation of a new resource.\n     */\n    CREATED = 201,\n\n    /**\n     * The request has been accepted for processing, but the processing has not been completed.\n     * The request might or might not be eventually acted upon, and may be disallowed when processing occurs.\n     */\n    ACCEPTED = 202,\n\n    /**\n     * SINCE HTTP/1.1\n     * The server is a transforming proxy that received a 200 OK from its origin,\n     * but is returning a modified version of the origin's response.\n     */\n    NON_AUTHORITATIVE_INFORMATION = 203,\n\n    /**\n     * The server successfully processed the request and is not returning any content.\n     */\n    NO_CONTENT = 204,\n\n    /**\n     * The server successfully processed the request, but is not returning any content.\n     * Unlike a 204 response, this response requires that the requester reset the document view.\n     */\n    RESET_CONTENT = 205,\n\n    /**\n     * The server is delivering only part of the resource (byte serving) due to a range header sent by the client.\n     * The range header is used by HTTP clients to enable resuming of interrupted downloads,\n     * or split a download into multiple simultaneous streams.\n     */\n    PARTIAL_CONTENT = 206,\n\n    /**\n     * The message body that follows is an XML message and can contain a number of separate response codes,\n     * depending on how many sub-requests were made.\n     */\n    MULTI_STATUS = 207,\n\n    /**\n     * The members of a DAV binding have already been enumerated in a preceding part of the (multistatus) response,\n     * and are not being included again.\n     */\n    ALREADY_REPORTED = 208,\n\n    /**\n     * The server has fulfilled a request for the resource,\n     * and the response is a representation of the result of one or more instance-manipulations applied to the current instance.\n     */\n    IM_USED = 226,\n\n    /**\n     * Indicates multiple options for the resource from which the client may choose (via agent-driven content negotiation).\n     * For example, this code could be used to present multiple video format options,\n     * to list files with different filename extensions, or to suggest word-sense disambiguation.\n     */\n    MULTIPLE_CHOICES = 300,\n\n    /**\n     * This and all future requests should be directed to the given URI.\n     */\n    MOVED_PERMANENTLY = 301,\n\n    /**\n     * This is an example of industry practice contradicting the standard.\n     * The HTTP/1.0 specification (RFC 1945) required the client to perform a temporary redirect\n     * (the original describing phrase was \"Moved Temporarily\"), but popular browsers implemented 302\n     * with the functionality of a 303 See Other. Therefore, HTTP/1.1 added status codes 303 and 307\n     * to distinguish between the two behaviours. However, some Web applications and frameworks\n     * use the 302 status code as if it were the 303.\n     */\n    FOUND = 302,\n\n    /**\n     * SINCE HTTP/1.1\n     * The response to the request can be found under another URI using a GET method.\n     * When received in response to a POST (or PUT/DELETE), the client should presume that\n     * the server has received the data and should issue a redirect with a separate GET message.\n     */\n    SEE_OTHER = 303,\n\n    /**\n     * Indicates that the resource has not been modified since the version specified by the request headers If-Modified-Since or If-None-Match.\n     * In such case, there is no need to retransmit the resource since the client still has a previously-downloaded copy.\n     */\n    NOT_MODIFIED = 304,\n\n    /**\n     * SINCE HTTP/1.1\n     * The requested resource is available only through a proxy, the address for which is provided in the response.\n     * Many HTTP clients (such as Mozilla and Internet Explorer) do not correctly handle responses with this status code, primarily for security reasons.\n     */\n    USE_PROXY = 305,\n\n    /**\n     * No longer used. Originally meant \"Subsequent requests should use the specified proxy.\"\n     */\n    SWITCH_PROXY = 306,\n\n    /**\n     * SINCE HTTP/1.1\n     * In this case, the request should be repeated with another URI; however, future requests should still use the original URI.\n     * In contrast to how 302 was historically implemented, the request method is not allowed to be changed when reissuing the original request.\n     * For example, a POST request should be repeated using another POST request.\n     */\n    TEMPORARY_REDIRECT = 307,\n\n    /**\n     * The request and all future requests should be repeated using another URI.\n     * 307 and 308 parallel the behaviors of 302 and 301, but do not allow the HTTP method to change.\n     * So, for example, submitting a form to a permanently redirected resource may continue smoothly.\n     */\n    PERMANENT_REDIRECT = 308,\n\n    /**\n     * The server cannot or will not process the request due to an apparent client error\n     * (e.g., malformed request syntax, too large size, invalid request message framing, or deceptive request routing).\n     */\n    BAD_REQUEST = 400,\n\n    /**\n     * Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet\n     * been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the\n     * requested resource. See Basic access authentication and Digest access authentication. 401 semantically means\n     * \"unauthenticated\",i.e. the user does not have the necessary credentials.\n     */\n    UNAUTHORIZED = 401,\n\n    /**\n     * Reserved for future use. The original intention was that this code might be used as part of some form of digital\n     * cash or micro payment scheme, but that has not happened, and this code is not usually used.\n     * Google Developers API uses this status if a particular developer has exceeded the daily limit on requests.\n     */\n    PAYMENT_REQUIRED = 402,\n\n    /**\n     * The request was valid, but the server is refusing action.\n     * The user might not have the necessary permissions for a resource.\n     */\n    FORBIDDEN = 403,\n\n    /**\n     * The requested resource could not be found but may be available in the future.\n     * Subsequent requests by the client are permissible.\n     */\n    NOT_FOUND = 404,\n\n    /**\n     * A request method is not supported for the requested resource;\n     * for example, a GET request on a form that requires data to be presented via POST, or a PUT request on a read-only resource.\n     */\n    METHOD_NOT_ALLOWED = 405,\n\n    /**\n     * The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.\n     */\n    NOT_ACCEPTABLE = 406,\n\n    /**\n     * The client must first authenticate itself with the proxy.\n     */\n    PROXY_AUTHENTICATION_REQUIRED = 407,\n\n    /**\n     * The server timed out waiting for the request.\n     * According to HTTP specifications:\n     * \"The client did not produce a request within the time that the server was prepared to wait. The client MAY repeat the request without modifications at any later time.\"\n     */\n    REQUEST_TIMEOUT = 408,\n\n    /**\n     * Indicates that the request could not be processed because of conflict in the request,\n     * such as an edit conflict between multiple simultaneous updates.\n     */\n    CONFLICT = 409,\n\n    /**\n     * Indicates that the resource requested is no longer available and will not be available again.\n     * This should be used when a resource has been intentionally removed and the resource should be purged.\n     * Upon receiving a 410 status code, the client should not request the resource in the future.\n     * Clients such as search engines should remove the resource from their indices.\n     * Most use cases do not require clients and search engines to purge the resource, and a \"404 Not Found\" may be used instead.\n     */\n    GONE = 410,\n\n    /**\n     * The request did not specify the length of its content, which is required by the requested resource.\n     */\n    LENGTH_REQUIRED = 411,\n\n    /**\n     * The server does not meet one of the preconditions that the requester put on the request.\n     */\n    PRECONDITION_FAILED = 412,\n\n    /**\n     * The request is larger than the server is willing or able to process. Previously called \"Request Entity Too Large\".\n     */\n    PAYLOAD_TOO_LARGE = 413,\n\n    /**\n     * The URI provided was too long for the server to process. Often the result of too much data being encoded as a query-string of a GET request,\n     * in which case it should be converted to a POST request.\n     * Called \"Request-URI Too Long\" previously.\n     */\n    URI_TOO_LONG = 414,\n\n    /**\n     * The request entity has a media type which the server or resource does not support.\n     * For example, the client uploads an image as image/svg+xml, but the server requires that images use a different format.\n     */\n    UNSUPPORTED_MEDIA_TYPE = 415,\n\n    /**\n     * The client has asked for a portion of the file (byte serving), but the server cannot supply that portion.\n     * For example, if the client asked for a part of the file that lies beyond the end of the file.\n     * Called \"Requested Range Not Satisfiable\" previously.\n     */\n    RANGE_NOT_SATISFIABLE = 416,\n\n    /**\n     * The server cannot meet the requirements of the Expect request-header field.\n     */\n    EXPECTATION_FAILED = 417,\n\n    /**\n     * This code was defined in 1998 as one of the traditional IETF April Fools' jokes, in RFC 2324, Hyper Text Coffee Pot Control Protocol,\n     * and is not expected to be implemented by actual HTTP servers. The RFC specifies this code should be returned by\n     * teapots requested to brew coffee. This HTTP status is used as an Easter egg in some websites, including Google.com.\n     */\n    I_AM_A_TEAPOT = 418,\n\n    /**\n     * The request was directed at a server that is not able to produce a response (for example because a connection reuse).\n     */\n    MISDIRECTED_REQUEST = 421,\n\n    /**\n     * The request was well-formed but was unable to be followed due to semantic errors.\n     */\n    UNPROCESSABLE_ENTITY = 422,\n\n    /**\n     * The resource that is being accessed is locked.\n     */\n    LOCKED = 423,\n\n    /**\n     * The request failed due to failure of a previous request (e.g., a PROPPATCH).\n     */\n    FAILED_DEPENDENCY = 424,\n\n    /**\n     * The client should switch to a different protocol such as TLS/1.0, given in the Upgrade header field.\n     */\n    UPGRADE_REQUIRED = 426,\n\n    /**\n     * The origin server requires the request to be conditional.\n     * Intended to prevent \"the 'lost update' problem, where a client\n     * GETs a resource's state, modifies it, and PUTs it back to the server,\n     * when meanwhile a third party has modified the state on the server, leading to a conflict.\"\n     */\n    PRECONDITION_REQUIRED = 428,\n\n    /**\n     * The user has sent too many requests in a given amount of time. Intended for use with rate-limiting schemes.\n     */\n    TOO_MANY_REQUESTS = 429,\n\n    /**\n     * The server is unwilling to process the request because either an individual header field,\n     * or all the header fields collectively, are too large.\n     */\n    REQUEST_HEADER_FIELDS_TOO_LARGE = 431,\n\n    /**\n     * A server operator has received a legal demand to deny access to a resource or to a set of resources\n     * that includes the requested resource. The code 451 was chosen as a reference to the novel Fahrenheit 451.\n     */\n    UNAVAILABLE_FOR_LEGAL_REASONS = 451,\n\n    /**\n     * A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.\n     */\n    INTERNAL_SERVER_ERROR = 500,\n\n    /**\n     * The server either does not recognize the request method, or it lacks the ability to fulfill the request.\n     * Usually this implies future availability (e.g., a new feature of a web-service API).\n     */\n    NOT_IMPLEMENTED = 501,\n\n    /**\n     * The server was acting as a gateway or proxy and received an invalid response from the upstream server.\n     */\n    BAD_GATEWAY = 502,\n\n    /**\n     * The server is currently unavailable (because it is overloaded or down for maintenance).\n     * Generally, this is a temporary state.\n     */\n    SERVICE_UNAVAILABLE = 503,\n\n    /**\n     * The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.\n     */\n    GATEWAY_TIMEOUT = 504,\n\n    /**\n     * The server does not support the HTTP protocol version used in the request\n     */\n    HTTP_VERSION_NOT_SUPPORTED = 505,\n\n    /**\n     * Transparent content negotiation for the request results in a circular reference.\n     */\n    VARIANT_ALSO_NEGOTIATES = 506,\n\n    /**\n     * The server is unable to store the representation needed to complete the request.\n     */\n    INSUFFICIENT_STORAGE = 507,\n\n    /**\n     * The server detected an infinite loop while processing the request.\n     */\n    LOOP_DETECTED = 508,\n\n    /**\n     * Further extensions to the request are required for the server to fulfill it.\n     */\n    NOT_EXTENDED = 510,\n\n    /**\n     * The client needs to authenticate to gain network access.\n     * Intended for use by intercepting proxies used to control access to the network (e.g., \"captive portals\" used\n     * to require agreement to Terms of Service before granting full Internet access via a Wi-Fi hotspot).\n     */\n    NETWORK_AUTHENTICATION_REQUIRED = 511\n}\n\nexport default HttpStatusCode\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f371a700b8ab5de5953e2caaae97bdac738c1d0a","contentHash":"b199097300972f7ee5a8ea02a236de64115ec1b6cdcbc49b2aa9c900ed89d271"}}